##
# Load files needed by the scenario via TFTP
#
# \param --load-tftp-ip    TFTP Server ip address
# \param --load-tftp-dir   directory within TFTP
#

source [genode_dir]/tool/run/load.inc

proc load_tftp_ip { } { return [get_cmd_arg --load-tftp-ip ""] }

proc load_tftp_dir { } { return [get_cmd_arg --load-tftp-dir ""] }

##
# The files are uploaded implicitly via TFTP to the target machine
#
proc run_load { } {

	set uboot_img "[run_dir]/image.img"

	set tftp_ip [load_tftp_ip]
	set tftp_dir [load_tftp_dir]

	if {[string length $tftp_dir] > 0} {
		set upload_img "$tftp_dir/image.img"
	} else {
		set upload_img "image.img"
	}

	if {[string length $tftp_ip] <= 0} {
		puts stderr "Error, TFTP server ip address must be set.";
		return false;
	}

	puts "Uploading binary image to TFTP Server $tftp_ip"
	eval spawn tftp $tftp_ip -c put "$uboot_img" "$upload_img"

	set load_spawn_id $spawn_id
	set timeout 360
	expect {
		"Error code 0: Permission denied"  {
			puts stderr "Error, the image file can't be uploaded, permission denied.";
			return false;
		}
		eof {
			puts "Image uploaded succesfully";
			return true;
		}
		timeout {
			puts stderr "Loading timed out";
			return false;
		}
	}
}