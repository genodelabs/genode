#
# \brief  Example for using Vancouver on Genode
# \author Norman Feske
# \author Markus Partheymueller
# \date   2011-11-21
#
# This run script starts the Vancouver VMM booting the multiboot modules
# listed in the 'multiboot' config node. It assumes that the module files
# are present at '<build-dir>/bin/' (see the 'boot_modules' variable).
#

#
# Build
#

if {![have_spec nova]} {
	puts "\nVancouver is only supported on NOVA\n"
	exit 0
}

set build_components {
	core init
	drivers/timer
	drivers/rtc
	vancouver
	drivers/framebuffer
	server/nitpicker
	server/liquid_framebuffer
	drivers/nic
	server/nic_bridge
	drivers/pci
	drivers/input
	drivers/usb
	app/launchpad
	server/nitlog
}

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="rtc_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Rtc"/></provides>
	</start>

	<start name="pci_drv">
                <resource name="RAM" quantum="3M"/>
                <provides><service name="PCI"/></provides>
                <route>
                        <any-service><parent/></any-service>
                </route>
        </start>

	<start name="nic_drv">
                <resource name="RAM" quantum="3M"/>
                <provides><service name="Nic"/></provides>
                <route>
                        <any-service><any-child/><parent/></any-service>
                </route>
        </start>

        <start name="nic_bridge">
                <resource name="RAM" quantum="3M"/>
                <provides><service name="Nic"/></provides>
                <route>
                        <service name="Nic"><child name="nic_drv"/></service>
                        <any-service><parent/></any-service>
                </route>
        </start>

	<start name="vesa_drv">
		<resource name="RAM" quantum="8M"/>
                <provides><service name="Framebuffer"/></provides>
                <route>
                        <service name="Timer"><child name="timer"/></service>
                        <service name="PCI"><any-child/></service>
                        <any-service><parent/></any-service>
                </route>
                <config width="1024" height="768" depth="16" buffered="no"/>
	</start>

	<start name="ps2_drv">
		<resource name="RAM" quantum="3M"/>
                <provides><service name="Input"/></provides>
                <route>
                        <any-service><parent/></any-service>
                </route>
	</start>

	<start name="nitpicker">
                <resource name="RAM" quantum="8M"/>
                <route>
                        <service name="Timer"><child name="timer"/></service>
                        <service name="Framebuffer"><child name="vesa_drv"/></service>
                        <service name="Input"><child name="ps2_drv"/></service>
                        <any-service><parent/></any-service>
                </route>
                <provides><service name="Nitpicker"/></provides>
        </start>

	<start name="launchpad">
		<resource name="RAM" quantum="2500M"/>
                <configfile name="launchpad-config"/>
                <route>
			<service name="Nic"><child name="nic_bridge"/></service>
                        <any-service><any-child/><parent/></any-service>
                </route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init
	vesa_drv
	nitpicker
	liquid_fb
	ps2_drv
	pci_drv
	nic_drv
	nic_bridge
	usb_drv
	timer
	rtc_drv
	vancouver
	launchpad
	launchpad-config
	small_vm
	gentoo_vm
	large_vm
	fiasco_vm
	nitlog
}

#
# Add files for a simple Fiasco.OC setup to core's ROM service
#
# The files are copied from a Genode build directory for the Fiasco.OC base
# platform.
#
append boot_modules { munich bzImage ramdisk vm_linux.cfg }
append boot_modules { bootstrap fiasco sigma0 moe ned io l4re pingpong vm_fiasco-oc.cfg }
build_boot_image $boot_modules

append qemu_args " -m 256 "
append qemu_args " -nographic "

run_genode_until forever
