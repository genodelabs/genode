#
# \brief  Vancouver on Genode - for automated testing
# \author Alexander Boettcher
# \date   2013-06-11
#
# This run script starts the Vancouver VMM booting from a multiboot image.
# It assumes that the module files are present at '<build-dir>/bin/'
#

assert_spec nova

set use_multiboot     1

set use_block_ide     0
set use_block_sata    0

set use_nic_session   1
set use_nic_bridge    0

set use_usb           0

set use_framebuffer   1
set use_fancy_stuff   0

set memory_vmm_vm     "128M"

set multiboot_files {
		<rom name="munich"/>
		<rom name="bzImage-3.1" cmdline="root=/dev/ram0 earlyprintk=ttyS0 console=ttyS0 text"/>
		<rom name="seoul-auto.gz"/>
}

set guest_os_binaries { munich bzImage-3.1 seoul-auto.gz}
set sha1_os_binaries  { 7ecb4ba634a0ecfa6429418ea73490d6f65afead 6b2ef2c5bf16db3ebcbe33ce134e4e0a96944f82 bb6384fe58ab0c945b231f6cc107bcdff1bdacbe}

#
# Download demo kernel, image and
# munich (part of Oslo framework http://os.inf.tu-dresden.de/~kauer/oslo)
#
set uri "http://genode.org/files/seoul"

foreach binary $guest_os_binaries {
	if {![file exists bin/$binary]} {
		exec mkdir -p bin
		puts "Download file bin/$binary"
		exec >& /dev/null wget -c -O bin/$binary $uri/$binary
	}
}

source ${genode_dir}/ports/run/seoul.inc

append qemu_args " -m 512 "
append qemu_args " -cpu phenom "
append qemu_args " -net nic,model=e1000 "
append qemu_args " -nographic "

run_genode_until {\[init -\> vancouver\] VMM: #   Hello Genode world!} 300

foreach binary $guest_os_binaries {
	exec rm -f bin/$binary
}

puts "Test succeeded"
