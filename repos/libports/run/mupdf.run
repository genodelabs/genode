set build_components {
	core init
	drivers/timer
	app/mupdf
	drivers/framebuffer drivers/input
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

set config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_platform_drv_config

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="mupdf">
		<resource name="RAM" quantum="1G"/>
		<config>
			<libc stdout="/dev/log" stderr="/dev/log">
				<vfs>
					<rom name="test.pdf" />
					<dir name="dev"> <log/> </dir>
				</vfs>
			</libc>
		</config>
	</start>
</config>
}

install_config $config

#
# Download test PDF file
#
if {![file exist bin/test.pdf]} {
	set pdf_url "http://genode-labs.com/publications/genode-fpga-graphics-2009.pdf"
	catch { exec wget $pdf_url -O bin/test.pdf }
}

if {![file exist bin/test.pdf]} {
	puts stderr "Could not download test PDF from '$pdf_url'"
	exit 1
}

set boot_modules {
	core init ld.lib.so timer
	mupdf
	libc.lib.so libm.lib.so
	openjpeg.lib.so freetype.lib.so libpng.lib.so zlib.lib.so jbig2dec.lib.so
	mupdf.lib.so jpeg.lib.so
	test.pdf
}

lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec         ps2] boot_modules ps2_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -m 768"

run_genode_until forever

