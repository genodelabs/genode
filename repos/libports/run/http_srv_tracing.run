#
# \brief  Test for using the lwIP TCP/IP stack
# \author Norman Feske
# \date   2011-05-22
#
# This test case executes a small HTTP server on Genode running on qemu. When
# the HTTP server is up, a HTTP request to the server is performed using
# 'lynx'. The response is validated against a known pattern.
#
# The test uses qemu's "-net user" option, redirecting Genode's port 80 to the
# host's port 5555. Consequently, it cannot be executed on non-qemu test
# environments (i.e., the test won't work with the Linux version of Genode).
#
# Please make sure to include a nic driver in your build configuration. E.g.,
# on the x86 platform, you may enable the 'dde_ipxe' repository.
#

#
# TODO: Add support for Linux via user-level networking (using the
#       tun/tap proxy driver at os/src/drivers/nic/linux)
#
if {[have_spec linux]} {
	puts "Run script does not support Linux."; exit 0 }

requires_installation_of lynx

#
# Build
#

set build_components {
	core init
	drivers/timer drivers/nic
	test/lwip/http_srv_tracing
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_drv">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Nic"/> </provides>
	</start>
	<start name="test-lwip_httpsrv_tracing">
		<resource name="RAM" quantum="64M"/>
		<config>
			<libc stdout="/dev/log" stderr="/dev/log">
				<vfs> <dir name="dev"> <log/> </dir> </vfs>
			</libc>
		</config>
	</start>}

append_platform_drv_config

append config {
</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer
	nic_drv
	ld.lib.so libc.lib.so lwip.lib.so
	test-lwip_httpsrv_tracing
}

# platform-specific modules
append_platform_drv_boot_modules

build_boot_image $boot_modules

#
# Execute test case
#

# qemu config
append qemu_args " -m 128 -nographic -serial mon:stdio "

append_if [have_spec x86]     qemu_args " -net nic,model=e1000 "
append_if [have_spec lan9118] qemu_args " -net nic,model=lan9118 "

append qemu_args " -net user -redir tcp:5555::80 "

#run_genode_until {.*Sent response.*} 60
run_genode_until forever

# vi: set ft=tcl :
