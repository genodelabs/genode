set build_components {
	core init timer
	server/log_terminal
	test/spark_real_time
}

set config {
	<config>
		<parent-provides>
			<service name="LOG"/>
			<service name="PD"/>
			<service name="CPU"/>
			<service name="ROM"/>
		</parent-provides>
		<default-route>
			<any-service> <parent/> </any-service>
		</default-route>
		<default caps="100"/>

		<start name="timer">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Timer"/></provides>
		</start>

		<start name="terminal">
			<binary name="log_terminal"/>
			<resource name="RAM" quantum="2M"/>
			<provides><service name="Terminal"/></provides>
		</start>

		<start name="test-spark_real_time">
			<resource name="RAM" quantum="10M"/>
			<config ld_verbose="yes"/>
			<route>
				<service name="Terminal"> <child name="terminal"/> </service>
				<service name="Timer"> <child name="timer"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>
	</config>
}

set boot_modules {
	core init log_terminal timer
	ld.lib.so spark.lib.so
	test-spark_real_time
}

build $build_components
create_boot_directory
install_config $config

#append_platform_drv_boot_modules
build_boot_image $boot_modules
append qemu_args " -nographic  "

run_genode_until "child \"test-spark_real_time\" exited with exit value 0" 20
