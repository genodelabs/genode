if {
	![have_spec hw] &&
	![have_spec nova] &&
	![have_spec sel4]
} {
	puts "Platform is unsupported."
	exit 0
}

set build_components {
	core init timer
	drivers/platform
	server/event_dump
	app/pci_decode
	app/acpica
	app/acpi_event
}

build $build_components

create_boot_directory

import_from_depot [depot_user]/src/dynamic_rom \
                  [depot_user]/src/event_filter \
                  [depot_user]/src/pc_usb_host_drv \
                  [depot_user]/src/ps2_drv \
                  [depot_user]/src/report_rom \
                  [depot_user]/src/usb_hid_drv

set config {
	<config>
		<parent-provides>
			<service name="IRQ"/>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="RM"/>
			<service name="PD"/>
			<service name="CPU"/>
			<service name="IO_MEM" />
			<service name="IO_PORT" />
		</parent-provides>
		<default-route>
			<any-service> <parent/> <any-child/> </any-service>
		</default-route>

		<start name="timer" caps="100">
			<resource name="RAM" quantum="2M"/>
			<provides><service name="Timer"/></provides>
		</start>

		<start name="drivers_reports" caps="100">
			<binary name="report_rom"/>
			<resource name="RAM" quantum="1M"/>
			<provides>
				<service name="Report"/>
				<service name="ROM"/>
			</provides>
			<config verbose="no">
				<policy label="pci_decode -> system"    report="acpi_drv -> acpi"/>
				<policy label="platform_drv -> devices" report="pci_decode -> devices"/>
				<policy label="usb_hid_drv -> report"   report="usb_drv -> devices"/>
			</config>
		</start>

		<start name="acpi_drv" caps="350">
			<resource name="RAM" quantum="4M"/>
			<route>
				<service name="Report"> <child name="drivers_reports"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>

		<start name="pci_decode" caps="350">
			<resource name="RAM" quantum="2M"/>
			<route>
				<service name="ROM" label="system"> <child name="drivers_reports"/> </service>
				<service name="Report"> <child name="drivers_reports"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>

		<start name="platform_drv" caps="400" managing_system="yes">
			<resource name="RAM" quantum="4M"/>
			<provides>
				<service name="Platform"/>
			</provides>
			<config>
				<policy label_prefix="ps2_drv"> <device name="ps2"/> </policy>
				<policy label_prefix="usb_drv" info="yes"> <pci class="USB"/> </policy>
				<policy label_prefix="acpica"/>
			</config>
			<route>
				<service name="ROM" label="devices"> <child name="report_rom"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>

		<start name="ps2_drv" caps="100">
			<resource name="RAM" quantum="2M"/>
			<config verbose_keyboard="no" verbose_mouse="no" verbose_scancodes="no"/>
			<route>
				<service name="Platform"> <child name="platform_drv"/> </service>
				<service name="Timer"> <child name="timer"/> </service>
				<service name="Event"> <child name="event_filter" label="ps2"/> </service>
				<any-service> <parent/> </any-service>
			</route>
		</start>

		<start name="usb_drv" caps="200">
			<binary name="pc_usb_host_drv"/>
			<resource name="RAM" quantum="20M"/>
			<provides> <service name="Usb"/> </provides>
			<config bios_handoff="no">
				<report devices="yes"/>
				<policy label_prefix="usb_hid_drv" class="0x3"/>
			</config>
			<route>
				<service name="Report"> <child name="drivers_reports"/> </service>
				<any-service><parent/><any-child/></any-service>
			</route>
		</start>

		<start name="usb_hid_drv" caps="140">
			<resource name="RAM" quantum="10M"/>
			<config use_report="yes"/>
			<route>
				<service name="ROM" label="report"> <child name="drivers_reports"/> </service>
				<service name="Event"> <child name="event_filter" label="usb"/> </service>
				<service name="Usb">   <child name="usb_drv"/> </service>
				<any-service><parent/><any-child/></any-service>
			</route>
		</start>

		<start name="event_filter" caps="100">
			<resource name="RAM" quantum="1M" />
			<provides> <service name="Event" /> </provides>
			<config>
				<output>
					<merge>
						<input name="ps2"/>
						<input name="acpi"/>
						<input name="usb"/>
					</merge>
				</output>
				<policy label="ps2"  input="ps2"/>
				<policy label="acpi" input="acpi"/>
				<policy label="usb"  input="usb"/>
			</config>
			<route>
				<service name="Event"> <child name="event_dump" /> </service>
				<any-service> <parent/> </any-service>
			</route>
		</start>

		<start name="event_dump" caps="100">
			<resource name="RAM" quantum="1M"/>
			<provides> <service name="Event"/> </provides>
			<route>
				<service name="Timer"> <child name="timer"/> </service>
				<any-service> <parent/> </any-service>
			</route>
		</start>

		<start name="acpica" caps="200">
			<resource name="RAM" quantum="8M"/>
			<config ld_verbose="yes" reset="yes" poweroff="yes" report="yes" report_period_ms="0">
			</config>
			<route>
				<service name="ROM" label="system"> <child name="dynamic_rom"/> </service>
				<service name="Report">  <child name="acpi_state"/> </service>
				<any-service> <parent/> <any-child/> </any-service>
			</route>
		</start>

		<start name="acpi_state" caps="100">
			<binary name="report_rom"/>
			<resource name="RAM" quantum="2M"/>
			<provides>
				<service name="ROM" />
				<service name="Report" />
			</provides>
			<config verbose="yes">
				<policy label="acpi_event -> acpi_ac"      report="acpica -> acpi_ac"/>
				<policy label="acpi_event -> acpi_battery" report="acpica -> acpi_battery"/>
				<policy label="acpi_event -> acpi_ec"      report="acpica -> acpi_ec"/>
				<policy label="acpi_event -> acpi_fixed"   report="acpica -> acpi_fixed"/>
				<policy label="acpi_event -> acpi_lid"     report="acpica -> acpi_lid"/>
				<policy label="acpi_event -> acpi_hid"     report="acpica -> acpi_hid"/>
			</config>
			<route>
				<any-service> <parent/> </any-service>
			</route>
		</start>

		<start name="acpi_event" caps="100">
			<resource name="RAM" quantum="1M"/>
			<config>
				<!-- example mapping - adapt to your target notebook !!! -->
				<!-- as="PRESS_RELEASE" is default if nothing specified -->
				<map acpi="ec"      value="25"        to_key="KEY_VENDOR"/>
				<map acpi="ec"      value="20"        to_key="KEY_BRIGHTNESSUP"/>
				<map acpi="ec"      value="21"        to_key="KEY_BRIGHTNESSDOWN"/>
				<map acpi="fixed"   value="0"         to_key="KEY_POWER" as="PRESS_RELEASE"/>
				<map acpi="lid"     value="CLOSED"    to_key="KEY_SLEEP" as="PRESS_RELEASE"/>
				<map acpi="lid"     value="OPEN"      to_key="KEY_SLEEP" as="PRESS_RELEASE"/>
				<map acpi="ac"      value="ONLINE"    to_key="KEY_WAKEUP"/>
				<map acpi="ac"      value="OFFLINE"   to_key="KEY_SLEEP"/>
				<map acpi="battery" value="0"         to_key="KEY_BATTERY"/>
				<map acpi="hid"     value="0x4000000" to_key="KEY_FN_F4"/>
			</config>
			<route>
				<service name="ROM" label="acpi_ac">      <child name="acpi_state"/> </service>
				<service name="ROM" label="acpi_battery"> <child name="acpi_state"/> </service>
				<service name="ROM" label="acpi_ec">      <child name="acpi_state"/> </service>
				<service name="ROM" label="acpi_fixed">   <child name="acpi_state"/> </service>
				<service name="ROM" label="acpi_lid">     <child name="acpi_state"/> </service>
				<service name="ROM" label="acpi_hid">     <child name="acpi_state"/> </service>
				<service name="Event"> <child name="event_filter" label="acpi"/> </service>
				<any-service> <parent/> </any-service>
			</route>
		</start>

		<start name="dynamic_rom" caps="100">
			<resource name="RAM" quantum="4M"/>
			<provides><service name="ROM"/></provides>
			<config verbose="yes">
				<rom name="system">
					<inline description="set system state to 'normal'">
						<system state="normal"/>
					</inline>
					<sleep milliseconds="5000" />
<!--
					<inline description="set system state to 'reset'">
						<system state="reset"/>
					</inline>
					<sleep milliseconds="5000" />
					<inline description="set system state to 'poweroff'">
						<system state="poweroff"/>
					</inline>
					<sleep milliseconds="500" />
-->
				</rom>
			</config>
		</start>

	</config>
}

install_config $config

# non PCI devices for platform_drv, e.g. ps2/pit
file copy [select_from_repositories board/[board]/devices] [run_dir]/genode/devices

set boot_modules {
	core init ld.lib.so
	timer platform_drv pci_decode acpi_drv
	acpica
	acpi_event
	event_dump
}

build_boot_image $boot_modules

append qemu_args "-nographic "

run_genode_until {\[init -\> acpi.*SCI IRQ:.*\n} 30

if {![have_include "power_on/qemu"]} {
	exit 0
}

set spawn_id $qemu_spawn_id

sleep 1

# send Ctrl-a+c to enter Qemu's monitor mode
send "\x01\x63"

# wait for monitor to become ready
run_genode_until {(qemu)} 20 $spawn_id


for {set i 0} {$i < 3} {incr i} {

	sleep 1
	send "system_powerdown\n"
	run_genode_until {.*key count: 0.*} 3 $spawn_id
}

puts "\nTest succeeded\n"
exit 0
