+++ src/lib/acpica/source/include/platform/acenv.h
@@ -222,7 +222,15 @@
 
 /* Unknown environment */
 
-#error Unknown target environment
+#ifdef __x86_64__
+#define ACPI_MACHINE_WIDTH 64
+#else
+#define ACPI_MACHINE_WIDTH 32
+#define ACPI_USE_NATIVE_DIVIDE
+#endif
+
+/* required for va_arg - otherwise below some alternative is defined */
+#include <stdarg.h>
 #endif
 
 /*! [End] no source code translation !*/
+++ src/lib/acpica/source/components/events/evevent.c
@@ -188,6 +188,9 @@
     UINT32                  i;
     ACPI_STATUS             Status;
 
+    /* read enabled events by kernel and don't disable them */
+    UINT32 FixedEnable;
+    (void) AcpiHwRegisterRead (ACPI_REGISTER_PM1_ENABLE, &FixedEnable);
 
     /*
      * Initialize the structure that keeps track of fixed event handlers and
@@ -198,6 +201,12 @@
         AcpiGbl_FixedEventHandlers[i].Handler = NULL;
         AcpiGbl_FixedEventHandlers[i].Context = NULL;
 
+        if (FixedEnable & AcpiGbl_FixedEventInfo[i].EnableBitMask)
+        {
+            AcpiOsPrintf ("	Genode: SKIP disabling event '%u'(%x) - enabled by kernel!\n", i, AcpiGbl_FixedEventInfo[i].EnableBitMask);
+            continue;
+         }
+
         /* Disable the fixed event */
 
         if (AcpiGbl_FixedEventInfo[i].EnableRegisterId != 0xFF)
@@ -257,10 +266,13 @@
      */
     for (i = 0; i < ACPI_NUM_FIXED_EVENTS; i++)
     {
-        /* Both the status and enable bits must be on for this event */
-
-        if ((FixedStatus & AcpiGbl_FixedEventInfo[i].StatusBitMask) &&
-            (FixedEnable & AcpiGbl_FixedEventInfo[i].EnableBitMask))
+        /* kernel 'signals' the fixed event by disabling it in the enable
+         * register. Check for events, that have registered handlers and that
+         * are disabled in the enable register. If found, re-enable event.
+         */
+        if (AcpiGbl_FixedEventInfo[i].EnableBitMask &&
+            AcpiGbl_FixedEventHandlers[i].Handler &&
+            !(FixedEnable & AcpiGbl_FixedEventInfo[i].EnableBitMask))
         {
             /*
              * Found an active (signalled) event. Invoke global event
@@ -303,12 +315,10 @@
 
     ACPI_FUNCTION_ENTRY ();
 
-
-    /* Clear the status bit */
-
+    /* Re-enable event - kernel disabled it */
     (void) AcpiWriteBitRegister (
-        AcpiGbl_FixedEventInfo[Event].StatusRegisterId,
-        ACPI_CLEAR_STATUS);
+        AcpiGbl_FixedEventInfo[Event].EnableRegisterId,
+        ACPI_ENABLE_EVENT);
 
     /*
      * Make sure that a handler exists. If not, report an error
