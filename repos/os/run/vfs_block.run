create_boot_directory
build {
	core init timer
	server/vfs
	server/vfs_block
	app/block_tester
	lib/vfs_import
}

install_config {
<config verbose="no">
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="vfs">
		<resource name="RAM" quantum="38M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs>
				<ram/>
				<import>
					<zero name="vfs_block.raw" size="32M"/>
				</import>
			</vfs>
			<policy label_prefix="vfs_block" root="/" writeable="yes"/>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="vfs_block" caps="120">
		<resource name="RAM" quantum="5M"/>
		<provides> <service name="Block"/> </provides>
		<config>
			<vfs>
				<fs buffer_size="4M" label="backend"/>
			</vfs>
			<policy label_prefix="block_tester"
			        file="/vfs_block.raw" block_size="512" writeable="yes"/>
		</config>
		<route>
			<service name="File_system"> <child name="vfs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="block_tester" caps="200">
		<resource name="RAM" quantum="64M"/>
		<config verbose="no" report="no" log="yes" stop_on_error="no">
			<tests>
				<sequential length="32M" size="4K"   batch="128"/>
				<sequential length="32M" size="8K"   batch="128"/>
				<random     length="32M" size="512K" seed="0xc0ffee"/>
				<ping_pong  length="32M" size="16K"/>

				<sequential length="32M" size="64K" batch="128" write="yes"/>
				<replay verbose="no" batch="128">
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="2048" count="1016"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="2048" count="1016"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="0" count="1"/>
					<request type="read" lba="2048" count="1016"/>
					<request type="read" lba="4096" count="1"/>
					<request type="write" lba="0" count="1"/>
					<request type="read" lba="1024" count="2048"/>
					<request type="write" lba="4096" count="2048"/>
					<request type="write" lba="0" count="1"/>
					<request type="write" lba="2048" count="1"/>
					<request type="write" lba="5696" count="1"/>
					<request type="write" lba="5696" count="1"/>
					<request type="sync" lba="0" count="1"/>
				</replay>
			</tests>
		</config>
		<route>
			<service name="Block"><child name="vfs_block"/></service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
</config>}

build_boot_image {
	core init timer vfs vfs_block block_tester
	ld.lib.so vfs.lib.so vfs_import.lib.so
}

run_genode_until {.*child "block_tester" exited with exit value 0.*\n} 60
