if { ![have_board pbxa9] } {
	puts "Platform is unsupported."
	exit 0
}

create_boot_directory

import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/src/init \
                  [depot_user]/src/fs_report \
                  [depot_user]/src/fs_rom \
                  [depot_user]/src/platform_drv \
                  [depot_user]/src/vfs_import \
                  [depot_user]/src/vfs

build { test/platform_drv }

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> </any-service>
	</default-route>
	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="report_fs">
		<binary name="vfs"/>
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<vfs>
				<ram/>
				<import>
					<inline name="config"><config><default-policy/></config>
					</inline>
				</import>
			</vfs>
			<policy label="fs_report -> "     root="/" writeable="yes"/>
			<policy label="report_fs_rom -> " root="/"/>
		</config>
	</start>

	<start name="fs_report">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> </provides>
		<config> <vfs> <fs/> </vfs> </config>
		<route>
			<service name="File_system"> <child name="report_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="report_fs_rom">
		<binary name="fs_rom"/>
		<resource name="RAM" quantum="3M"/>
		<provides> <service name="ROM"/> </provides>
		<route>
			<service name="File_system"> <child name="report_fs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="platform_drv">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Platform"/> </provides>
		<route>
			<service name="ROM" label="config"> <child name="report_fs_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="test-platform_drv">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="Report">   <child name="fs_report" label="config"/> </service>
			<service name="Platform"> <child name="platform_drv"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
</config>}


build_boot_image { test-platform_drv }

append qemu_args "-nographic "

set good_string {
[init -> test-platform_drv] <devices>
[init -> test-platform_drv] 	<device name="0" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40000000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="32"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="1" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40001000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="33"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="2" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40002000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="34"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] </devices>
[init -> test-platform_drv] <devices>
[init -> test-platform_drv] 	<device name="0" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40000000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="32"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="1" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40001000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="33"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] </devices>
[init -> test-platform_drv] <devices/>
[init -> test-platform_drv] <devices>
[init -> test-platform_drv] 	<device name="0" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40000000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="32"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="1" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40001000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="33"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="2" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40002000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="34"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="3" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40003000" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="35"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] </devices>
[init -> platform_drv] Error: Device to be destroyed, still obtained by session
[init -> platform_drv] Error: Device to be destroyed, still obtained by session
[init -> platform_drv] Error: Device to be destroyed, still obtained by session
[init -> platform_drv] Error: Device to be destroyed, still obtained by session
[init -> platform_drv] Warning: Platform (test-platform_drv -> ) Device 3 has changed, will close device session
[init -> platform_drv] Warning: Platform (test-platform_drv -> ) Device 2 has changed, will close device session
[init -> platform_drv] Warning: Platform (test-platform_drv -> ) Device 1 has changed, will close device session
[init -> platform_drv] Warning: Platform (test-platform_drv -> ) Device 0 has changed, will close device session
[init -> test-platform_drv] <devices/>
[init -> test-platform_drv] <devices>
[init -> test-platform_drv] 	<device name="0" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40000100" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="32"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] </devices>
[init -> platform_drv] Warning: Platform (test-platform_drv -> ) Cannot aquire device 0 already in use
[init -> test-platform_drv] Error: Device 0 not valid!
[init -> test-platform_drv] <devices>
[init -> test-platform_drv] 	<device name="0" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40000100" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="32"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="1" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40001100" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="33"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="2" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40002100" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="34"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] 	<device name="3" type="dummy-device">
[init -> test-platform_drv] 		<io_mem phys_addr="0x40003100" size="0x1000"/>
[init -> test-platform_drv] 		<irq number="35"/>
[init -> test-platform_drv] 	</device>
[init -> test-platform_drv] </devices>
[init -> test-platform_drv] Found next valid device of dummy type
[init -> test-platform_drv] Test has ended!
[init -> platform_drv] Warning: no policy defined for label 'test-platform_drv -> '
[init -> platform_drv] Error: No matching policy for 'test-platform_drv -> ' anymore, will close the session!
}

run_genode_until "No matching policy for 'test-platform_drv -> ' anymore, will close the session!.*\n" 100
grep_output  "init -> "
compare_output_to $good_string
