#
# Build
#

set build_components {
	core init drivers/timer drivers/framebuffer drivers/input
	server/dynamic_rom server/nitpicker server/report_rom
	app/pointer app/menu_view
	app/scout app/launchpad app/launcher test/nitpicker
	server/nit_fader server/rom_filter server/wm app/decorator
	app/floating_window_layouter app/status_bar server/nit_fb
	app/backdrop app/xray_trigger
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="CPU"/>
		<service name="PD"/>
		<service name="RAM"/>
		<service name="RM"/>
		<service name="LOG"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
		<config width="640" height="480"/>
	</start>}

append_platform_drv_config

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
		<config buffered="yes" />
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>}

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
		<config>
			<report hover="yes" focus="yes" />
			<domain name="pointer"   layer="1" content="client" label="no" origin="pointer" />
			<domain name="panel"     layer="2" content="client" label="no" hover="always" focus="transient" />
			<domain name="default"   layer="3" color="#ff0000" hover="always" focus="click" />
			<domain name="decorator" layer="3" content="client" label="no" hover="always" focus="transient" />

			<policy label="pointer"                       domain="pointer"/>
			<policy label_prefix="wm -> launcher -> menu" domain="panel"/>
			<policy label="wm -> decorator"               domain="decorator"/>
			<policy label="status_bar"                    domain="panel"/>
			<default-policy                               domain="default"/>

			<global-key name="KEY_SCROLLLOCK" label="xray_trigger" />
			<global-key name="KEY_F1"         label="xray_trigger" />
			<global-key name="KEY_F2"         label="xray_trigger" />
			<global-key name="KEY_LEFTMETA"   label="wm -> launcher" />
			<global-key name="KEY_F3"         label="wm -> launcher" />
		</config>
		<route>
			<service name="Report"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
	<start name="pointer">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="Nitpicker"> <child name="nitpicker" /> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="xray_trigger">
		<resource name="RAM" quantum="1M"/>
		<config>
			<press   name="KEY_F1" xray="on"/>
			<release name="KEY_F1" xray="off"/>
			<press   name="KEY_F2" xray="toggle"/>
			<hover domain="panel"/>
			<hover domain="decorator"/>
		</config>
		<route>
			<service name="ROM">       <child name="report_rom"/> </service>
			<service name="Nitpicker"> <child name="nitpicker"/>  </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="status_bar">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="ROM"> <child name="report_rom"/> </service>
			<service name="Nitpicker"> <child name="nitpicker"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="no">
			<rom>
				<policy label="decorator_config -> xray"      report="xray_trigger -> xray"/>
				<policy label="layouter -> window_list"       report="wm -> window_list"/>
				<policy label="layouter -> focus_request"     report="wm -> focus_request" />
				<policy label="decorator -> window_layout"    report="layouter -> window_layout"/>
				<policy label="wm -> resize_request"          report="layouter -> resize_request"/>
				<policy label="decorator -> pointer"          report="wm -> pointer"/>
				<policy label="layouter -> hover"             report="decorator -> hover"/>
				<policy label="wm -> focus"                   report="layouter -> focus"/>
				<policy label="status_bar -> focus"           report="nitpicker -> focus"/>
				<policy label="launcher -> focus"             report="nitpicker -> focus"/>
				<policy label="xray_trigger -> hover"         report="nitpicker -> hover"/>
				<policy label="layouter -> decorator_margins" report="decorator -> decorator_margins"/>
			</rom>
		</config>
	</start>

	<start name="wm">
		<resource name="RAM" quantum="6M"/>
		<provides>
			<service name="Nitpicker"/>
		</provides>
		<config>
			<policy label="decorator"                  role="decorator"/>
			<policy label="layouter"                   role="layouter"/>
			<policy label_prefix="launcher -> menu"    role="direct"/>
			<policy label_prefix="launcher -> testnit" role="direct"/>
		</config>
		<route>
			<any-service>
				<child name="nitpicker"/> <child name="report_rom"/> <parent/> <any-child/>
			</any-service>
		</route>
	</start>

	<start name="layouter">
		<binary name="floating_window_layouter"/>
		<resource name="RAM" quantum="4M"/>
		<route>
			<any-service>
				<child name="wm"/> <child name="report_rom"/> <parent/> <any-child/>
			</any-service>
		</route>
	</start>

	<start name="decorator">
		<binary name="decorator"/>
		<resource name="RAM" quantum="8M"/>
		<configfile name="decorator.config"/>
		<route>
			<service name="ROM" label="decorator.config">
				<child name="decorator_config"/> </service>
			<any-service>
				<child name="wm"/> <child name="report_rom"/> <parent/> <any-child/>
			</any-service>
		</route>
	</start>

	<start name="decorator_config">
		<binary name="rom_filter"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<config verbose="yes">

			<input name="xray_enabled" rom="xray" node="xray">
				<attribute name="enabled" />
			</input>

			<output node="config">
				<inline>
					<controls>
						<title/> <minimizer/> <maximizer/> <closer/>
					</controls>
				</inline>
				<if>
					<has_value input="xray_enabled" value="yes" />
					<then>
						<inline>
							<default-policy color="#ff0000" gradient="75" />
						</inline>
					</then>
				</if>
			</output>

		</config>
		<route>
			<service name="ROM"> <child name="report_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="launcher">
		<resource name="RAM" quantum="60M" />
		<config focus_prefix="wm -> launcher -> ">
			<subsystem name="scout" title="Scout">
				<resource name="RAM" quantum="20M" />
				<binary name="scout" />
			</subsystem>
			<subsystem name="testnit1" title="Nitpicker Test">
				<resource name="RAM" quantum="2M" />
				<binary name="testnit" />
			</subsystem>
			<subsystem name="testnit2" title="Nitpicker Test 2">
				<resource name="RAM" quantum="2M" />
				<binary name="testnit" />
			</subsystem>
			<subsystem name="testnit3" title="Nitpicker Test 3">
				<resource name="RAM" quantum="2M" />
				<binary name="testnit" />
			</subsystem>
			<subsystem name="scout2" title="Scoutx">
				<resource name="RAM" quantum="20M" />
				<binary name="scout" />
			</subsystem>
			<subsystem name="testnit4" title="Nitpicker Testx">
				<resource name="RAM" quantum="2M" />
				<binary name="testnit" />
			</subsystem>
			<subsystem name="testnit5" title="Nitpicker Test5">
				<resource name="RAM" quantum="2M" />
				<binary name="testnit" />
			</subsystem>
			<subsystem name="backdrop" title="Backdrop">
				<resource name="RAM" quantum="4M"/>
				<binary name="backdrop" />
				<config>
					<libc>
						<vfs>
						</vfs>
					</libc>
					<fill color="#224433" />
				</config>
			</subsystem>

		</config>
		<route>
			<service name="ROM"> <if-arg key="label" value="focus"/>
				<child name="report_rom" />
			</service>
			<any-service> <child name="wm"/> <parent/> <any-child/> </any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer dynamic_rom nitpicker pointer menu_view
	ld.lib.so libpng.lib.so libc.lib.so libm.lib.so zlib.lib.so
	menu_view_styles.tar
	scout launchpad testnit
	nit_fader report_rom launcher rom_filter xray_trigger
	decorator wm floating_window_layouter status_bar nit_fb backdrop
}

# platform-specific modules
append_platform_drv_boot_modules

lappend_if [have_spec linux]        boot_modules fb_sdl
lappend_if [have_spec ps2]          boot_modules ps2_drv
lappend_if [have_spec framebuffer]  boot_modules fb_drv

build_boot_image $boot_modules

run_genode_until forever
